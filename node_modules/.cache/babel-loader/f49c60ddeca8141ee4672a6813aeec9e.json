{"ast":null,"code":"/* eslint-disable */\nimport { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_INK, UNLIKE_INK, MARK_NOTIFICATIONS_READ } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_SCREAM:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          screamId: action.payload.screamId\n        }]\n      };\n\n    case UNLIKE_SCREAM:\n      return { ...state,\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_INK","UNLIKE_INK","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","LIKE_SCREAM","userHandle","handle","screamId","UNLIKE_SCREAM","filter","like","forEach","not","read"],"mappings":"AAAA;AACA,SACCA,QADD,EAECC,iBAFD,EAGCC,mBAHD,EAICC,YAJD,EAKCC,QALD,EAMCC,UAND,EAOCC,uBAPD,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,aAAa,EAAE,KADK;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,KAAK,EAAE,EAJa;AAKpBC,EAAAA,aAAa,EAAE;AALK,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKN,mBAAL;AACE,aAAOK,YAAP;;AACF,SAAKP,QAAL;AACE,aAAO;AACLQ,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGL,WAAGK,MAAM,CAACE;AAHL,OAAP;;AAKF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKQ,WAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEO,UAAAA,UAAU,EAAEL,KAAK,CAACH,WAAN,CAAkBS,MADhC;AAEEC,UAAAA,QAAQ,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAF3B,SAFK;AAFF,OAAP;;AAUF,SAAKC,aAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACH,QAAL,KAAkBN,MAAM,CAACE,OAAP,CAAeI,QADtC;AAFF,OAAP;;AAMF,SAAKd,uBAAL;AACEO,MAAAA,KAAK,CAACD,aAAN,CAAoBY,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACL,GAAGb;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA3CL;AA6CA","sourcesContent":["/* eslint-disable */\nimport {\n\tSET_USER,\n\tSET_AUTHENTICATED,\n\tSET_UNAUTHENTICATED,\n\tLOADING_USER,\n\tLIKE_INK,\n\tUNLIKE_INK,\n\tMARK_NOTIFICATIONS_READ\n} from '../types';\n\nconst initialState = {\n\tauthenticated: false,\n\tloading: false,\n\tcredentials: {},\n\tlikes: [],\n\tnotifications: []\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true\n      };\n    case LIKE_SCREAM:\n      return {\n        ...state,\n        likes: [\n          ...state.likes,\n          {\n            userHandle: state.credentials.handle,\n            screamId: action.payload.screamId\n          }\n        ]\n      };\n    case UNLIKE_SCREAM:\n      return {\n        ...state,\n        likes: state.likes.filter(\n          (like) => like.screamId !== action.payload.screamId\n        )\n      };\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach((not) => (not.read = true));\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}