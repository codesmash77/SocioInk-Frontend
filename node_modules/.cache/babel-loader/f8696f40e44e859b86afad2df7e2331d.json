{"ast":null,"code":"import _defineProperty from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import MyButton from'../util/MyButton';// MUI Stuff\nimport Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Dialog from'@material-ui/core/Dialog';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import CircularProgress from'@material-ui/core/CircularProgress';import AddIcon from'@material-ui/icons/Add';import CloseIcon from'@material-ui/icons/Close';// Redux stuff\nimport{connect}from'react-redux';import{postInk,clearErrors}from'../redux/actions/dataActions';import'../components/Ink.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostInk=/*#__PURE__*/function(_Component){_inherits(PostInk,_Component);var _super=_createSuper(PostInk);function PostInk(){var _this;_classCallCheck(this,PostInk);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={open:false,body:'',errors:{}};_this.handleOpen=function(){_this.setState({open:true});};_this.handleClose=function(){_this.props.clearErrors();_this.setState({open:false,errors:{}});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=function(event){event.preventDefault();_this.props.postInk({body:_this.state.body});};return _this;}_createClass(PostInk,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.UI.errors){this.setState({errors:nextProps.UI.errors});}if(!nextProps.UI.errors&&!nextProps.UI.loading){this.setState({body:'',open:false,errors:{}});}}},{key:\"render\",value:function render(){var errors=this.state.errors;var loading=this.props.UI.loading;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MyButton,{onClick:this.handleOpen,tip:\"Post an Ink!\",children:/*#__PURE__*/_jsx(AddIcon,{})}),/*#__PURE__*/_jsxs(Dialog,{open:this.state.open,onClose:this.handleClose,fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(MyButton,{tip:\"Close\",onClick:this.handleClose,tipClassName:\"closeButton\",children:/*#__PURE__*/_jsx(CloseIcon,{})}),/*#__PURE__*/_jsx(DialogTitle,{children:\"Post a new scream\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{name:\"body\",type:\"text\",label:\"INK!!\",multiline:true,rows:\"3\",placeholder:\"INK BODY\",error:errors.body?true:false,helperText:errors.body,className:\"Textfield\",onChange:this.handleChange,fullWidth:true}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:\"submitbutton\",disabled:loading,children:[\"Submit\",loading&&/*#__PURE__*/_jsx(CircularProgress,{size:30,className:\"progressspinner\"})]})]})})]})]});}}]);return PostInk;}(Component);var mapStateToProps=function mapStateToProps(state){return{UI:state.UI};};export default connect(mapStateToProps,{postInk:postInk,clearErrors:clearErrors})(PostInk);","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/Inks/PostInk.js"],"names":["React","Component","Fragment","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postInk","clearErrors","PostInk","state","open","body","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","nextProps","UI","loading","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { postInk, clearErrors } from '../redux/actions/dataActions';\nimport '../components/Ink.css';\n\nclass PostInk extends Component {\n  state = {\n    open: false,\n    body: '',\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: '', open: false, errors: {} });\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors();\n    this.setState({ open: false, errors: {} });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.postInk({ body: this.state.body });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      UI: { loading }\n    } = this.props;\n    return (\n      <Fragment>\n        <MyButton onClick={this.handleOpen} tip=\"Post an Ink!\">\n          <AddIcon />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName=\"closeButton\"\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogTitle>Post a new scream</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                name=\"body\"\n                type=\"text\"\n                label=\"INK!!\"\n                multiline\n                rows=\"3\"\n                placeholder=\"INK BODY\"\n                error={errors.body ? true : false}\n                helperText={errors.body}\n                className=\"Textfield\"\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"submitbutton\"\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className=\"progressspinner\"\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostInk.propTypes = {\n  postInk: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI\n});\n\nexport default connect(\n  mapStateToProps,\n  { postInk, clearErrors }\n)(PostInk);"]},"metadata":{},"sourceType":"module"}