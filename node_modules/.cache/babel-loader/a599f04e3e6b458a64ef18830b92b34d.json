{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/App.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport AuthRoute from './util/authroute';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport themeObject from './util/theme';\nimport jwtDecode from 'jwt-decode';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme(themeObject);\naxios.defaults.baseURL = 'https://us-central1-socioink.cloudfunctions.net/api';\nconst token = localStorage.getItem('FBIdToken');\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({\n      type: SET_AUTHENTICATED\n    });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                component: home\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n                exact: true,\n                path: \"/login\",\n                component: login,\n                authenticated: authenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n                exact: true,\n                path: \"/signup\",\n                component: signup,\n                authenticated: authenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Navbar","home","login","signup","AuthRoute","createTheme","ThemeProvider","themeObject","jwtDecode","Provider","store","SET_AUTHENTICATED","logoutUser","getUserData","axios","theme","defaults","baseURL","token","localStorage","getItem","decodedToken","exp","Date","now","dispatch","window","location","href","type","headers","common","App","render","authenticated"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,0BAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,6BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGV,WAAW,CAACE,WAAD,CAAzB;AAEAO,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,qDAAzB;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;;AACA,IAAIF,KAAJ,EAAW;AACV,QAAMG,YAAY,GAAGb,SAAS,CAACU,KAAD,CAA9B;;AACA,MAAIG,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA9B,EAA0C;AACzCd,IAAAA,KAAK,CAACe,QAAN,CAAeb,UAAU,EAAzB;AACAc,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA,GAHD,MAGO;AACNlB,IAAAA,KAAK,CAACe,QAAN,CAAe;AAAEI,MAAAA,IAAI,EAAElB;AAAR,KAAf;AACAG,IAAAA,KAAK,CAACE,QAAN,CAAec,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDb,KAAjD;AACAR,IAAAA,KAAK,CAACe,QAAN,CAAeZ,WAAW,EAA1B;AACA;AACD;;AAED,MAAMmB,GAAN,SAAkBrC,SAAlB,CAA4B;AAC3BsC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAElB,KAAtB;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,KAAjB;AAAA,+BACC,QAAC,MAAD;AAAA,kCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACC,QAAC,MAAD;AAAA,sCACC,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,GAAlB;AAAsB,gBAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,QAAC,SAAD;AAAW,gBAAA,KAAK,MAAhB;AAAiB,gBAAA,IAAI,EAAC,QAAtB;AAA+B,gBAAA,SAAS,EAAEC,KAA1C;AAAiD,gBAAA,aAAa,EAAEgC;AAAhE;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC,QAAC,SAAD;AAAW,gBAAA,KAAK,MAAhB;AAAiB,gBAAA,IAAI,EAAC,SAAtB;AAAgC,gBAAA,SAAS,EAAE/B,MAA3C;AAAmD,gBAAA,aAAa,EAAE+B;AAAlE;AAAA;AAAA;AAAA;AAAA,sBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAgBA;;AAlB0B;;AAqB5B,eAAeF,GAAf","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\n\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport AuthRoute from './util/authroute';\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport themeObject from './util/theme';\nimport jwtDecode from 'jwt-decode';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\nimport axios from 'axios';\n\nconst theme = createTheme(themeObject);\n\naxios.defaults.baseURL = 'https://us-central1-socioink.cloudfunctions.net/api'\n\nconst token = localStorage.getItem('FBIdToken');\nif (token) {\n\tconst decodedToken = jwtDecode(token);\n\tif (decodedToken.exp * 1000 < Date.now()) {\n\t\tstore.dispatch(logoutUser());\n\t\twindow.location.href = '/login';\n\t} else {\n\t\tstore.dispatch({ type: SET_AUTHENTICATED });\n\t\taxios.defaults.headers.common['Authorization'] = token;\n\t\tstore.dispatch(getUserData());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={home} />\n\t\t\t\t\t\t\t\t<AuthRoute exact path=\"/login\" component={login} authenticated={authenticated} />\n\t\t\t\t\t\t\t\t<AuthRoute exact path=\"/signup\" component={signup} authenticated={authenticated} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Router>\n\t\t\t\t</Provider>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}