{"ast":null,"code":"/* eslint-disable */\nimport { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_INK, UNLIKE_INK, MARK_NOTIFICATIONS_READ } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_INK:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          screamId: action.payload.screamId\n        }]\n      };\n\n    case UNLIKE_INK:\n      return { ...state,\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_INK","UNLIKE_INK","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read"],"mappings":"AAAA;AACA,SACCA,QADD,EAECC,iBAFD,EAGCC,mBAHD,EAICC,YAJD,EAKCC,QALD,EAMCC,UAND,EAOCC,uBAPD,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,aAAa,EAAE,KADK;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,KAAK,EAAE,EAJa;AAKpBC,EAAAA,aAAa,EAAE;AALK,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKd,iBAAL;AACC,aAAO,EACN,GAAGY,KADG;AAENL,QAAAA,aAAa,EAAE;AAFT,OAAP;;AAID,SAAKN,mBAAL;AACC,aAAOK,YAAP;;AACD,SAAKP,QAAL;AACC,aAAO;AACNQ,QAAAA,aAAa,EAAE,IADT;AAENC,QAAAA,OAAO,EAAE,KAFH;AAGN,WAAGK,MAAM,CAACE;AAHJ,OAAP;;AAKD,SAAKb,YAAL;AACC,aAAO,EACN,GAAGU,KADG;AAENJ,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKL,QAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENF,QAAAA,KAAK,EAAE,CACN,GAAGE,KAAK,CAACF,KADH,EAEN;AACCM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MAD/B;AAECC,UAAAA,QAAQ,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF1B,SAFM;AAFD,OAAP;;AAUD,SAAKd,UAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBL,MAAM,CAACE,OAAP,CAAeG,QAA9D;AAFD,OAAP;;AAID,SAAKb,uBAAL;AACCO,MAAAA,KAAK,CAACD,aAAN,CAAoBU,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACN,GAAGX;AADG,OAAP;;AAGD;AACC,aAAOA,KAAP;AAzCF;AA2CA","sourcesContent":["/* eslint-disable */\nimport {\n\tSET_USER,\n\tSET_AUTHENTICATED,\n\tSET_UNAUTHENTICATED,\n\tLOADING_USER,\n\tLIKE_INK,\n\tUNLIKE_INK,\n\tMARK_NOTIFICATIONS_READ\n} from '../types';\n\nconst initialState = {\n\tauthenticated: false,\n\tloading: false,\n\tcredentials: {},\n\tlikes: [],\n\tnotifications: []\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_AUTHENTICATED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthenticated: true\n\t\t\t};\n\t\tcase SET_UNAUTHENTICATED:\n\t\t\treturn initialState;\n\t\tcase SET_USER:\n\t\t\treturn {\n\t\t\t\tauthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\tcase LOADING_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase LIKE_INK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlikes: [\n\t\t\t\t\t...state.likes,\n\t\t\t\t\t{\n\t\t\t\t\t\tuserHandle: state.credentials.handle,\n\t\t\t\t\t\tscreamId: action.payload.screamId\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tcase UNLIKE_INK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlikes: state.likes.filter((like) => like.screamId !== action.payload.screamId)\n\t\t\t};\n\t\tcase MARK_NOTIFICATIONS_READ:\n\t\t\tstate.notifications.forEach((not) => (not.read = true));\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}