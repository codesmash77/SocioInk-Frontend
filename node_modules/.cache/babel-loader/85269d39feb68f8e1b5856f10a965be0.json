{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/Inks/InkDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; // MUI Stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { getInk, clearErrors } from '../redux/actions/dataActions';\nimport '../components/Ink.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InkDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        userHandle,\n        inkId\n      } = this.props;\n      const newPath = `/users/${userHandle}/ink/${inkId}`;\n      if (oldPath === newPath) oldPath = `/users/${userHandle}`;\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getInk(this.props.inkId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      ink: {\n        inkId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerDiv\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 200,\n        thickness: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 16,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 5,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImage,\n          alt: \"Profile\",\n          className: \"profileimage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 7,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: Link,\n          color: \"primary\",\n          variant: \"h5\",\n          to: `/users/${userHandle}`,\n          children: [\"@\", userHandle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"invisibleseparator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: dayjs(createdAt).format('h:mm a, MMMM DD YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"invisibleseparator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n          inkId: inkId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [likeCount, \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          tip: \"comments\",\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [commentCount, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"invisibleseparator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        inkId: inkId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: this.handleOpen,\n        tip: \"Expand scream\",\n        tipClassName: \"expandButton\",\n        children: /*#__PURE__*/_jsxDEV(UnfoldMore, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          tip: \"Close\",\n          onClick: this.handleClose,\n          tipClassName: \"closeButton\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: \"dialogContent\",\n          children: dialogMarkup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInkDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getInk: PropTypes.func.isRequired,\n  inkId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  ink: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ink: state.data.ink,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getInk,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(InkDialog);","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/Inks/InkDialog.js"],"names":["React","Component","Fragment","PropTypes","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getInk","clearErrors","InkDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","userHandle","inkId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","ink","body","createdAt","likeCount","commentCount","userImage","comments","UI","loading","dialogMarkup","format","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n// MUI Stuff\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { getInk, clearErrors } from '../redux/actions/dataActions';\nimport '../components/Ink.css';\n\n\nclass InkDialog extends Component {\n  state = {\n    open: false,\n    oldPath: '',\n    newPath: ''\n  };\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n  handleOpen = () => {\n    let oldPath = window.location.pathname;\n\n    const { userHandle, inkId } = this.props;\n    const newPath = `/users/${userHandle}/ink/${inkId}`;\n\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\n\n    window.history.pushState(null, null, newPath);\n\n    this.setState({ open: true, oldPath, newPath });\n    this.props.getInk(this.props.inkId);\n  };\n  handleClose = () => {\n    window.history.pushState(null, null, this.state.oldPath);\n    this.setState({ open: false });\n    this.props.clearErrors();\n  };\n\n  render() {\n    const {\n      ink: {\n        inkId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments\n      },\n      UI: { loading }\n    } = this.props;\n\n    const dialogMarkup = loading ? (\n      <div className=\"spinnerDiv\">\n        <CircularProgress size={200} thickness={2} />\n      </div>\n    ) : (\n      <Grid container spacing={16}>\n        <Grid item sm={5}>\n          <img src={userImage} alt=\"Profile\" className=\"profileimage\" />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography\n            component={Link}\n            color=\"primary\"\n            variant=\"h5\"\n            to={`/users/${userHandle}`}\n          >\n            @{userHandle}\n          </Typography>\n          <hr className=\"invisibleseparator\" />\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n          </Typography>\n          <hr className=\"invisibleseparator\" />\n          <Typography variant=\"body1\">{body}</Typography>\n          <LikeButton inkId={inkId} />\n          <span>{likeCount} likes</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </MyButton>\n          <span>{commentCount} comments</span>\n        </Grid>\n        <hr className=\"invisibleseparator\" />\n        <CommentForm inkId={inkId} />\n        <Comments comments={comments} />\n      </Grid>\n    );\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip=\"Expand scream\"\n          tipClassName=\"expandButton\"\n        >\n          <UnfoldMore color=\"primary\" />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <MyButton\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName=\"closeButton\"\n          >\n            <CloseIcon />\n          </MyButton>\n          <DialogContent className=\"dialogContent\">\n            {dialogMarkup}\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nInkDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getInk: PropTypes.func.isRequired,\n  inkId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  ink: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  ink: state.data.ink,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getInk,\n  clearErrors\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(InkDialog);"]},"metadata":{},"sourceType":"module"}