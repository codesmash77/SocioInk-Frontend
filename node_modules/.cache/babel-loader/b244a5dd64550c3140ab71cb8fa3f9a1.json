{"ast":null,"code":"/* eslint-disable */\nimport { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\nimport axios from 'axios';\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    const FBIdToken = `Bearer ${res.data}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_USER","MARK_NOTIFICATIONS_READ","axios","loginUser","userData","history","dispatch","type","post","then","res","FBIdToken","data","localStorage","setItem","defaults","headers","common","getUserData","push","catch","err","payload","response","get","console","log","setAuthorizationHeader","token"],"mappings":"AAAA;AACA,SACCA,QADD,EAECC,UAFD,EAGCC,YAHD,EAICC,UAJD,EAKCC,mBALD,EAMCC,YAND,EAOCC,uBAPD,QAQO,UARP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACAI,EAAAA,KAAK,CACHM,IADF,CACO,QADP,EACiBJ,QADjB,EAEEK,IAFF,CAEQC,GAAD,IAAS;AACd,UAAMC,SAAS,GAAI,UAASD,GAAG,CAACE,IAAK,EAArC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,SAAlC;AACAT,IAAAA,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDN,SAAjD;AACAL,IAAAA,QAAQ,CAACY,WAAW,EAAZ,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAQ,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACA,GATF,EAUEC,KAVF,CAUSC,GAAD,IAAS;AACff,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEX,UADE;AAER0B,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaX;AAFd,KAAD,CAAR;AAIA,GAfF;AAgBA,CAlBM;AAoBP,OAAO,MAAMM,WAAW,GAAG,MAAOZ,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACAE,EAAAA,KAAK,CACHsB,GADF,CACM,OADN,EAEEf,IAFF,CAEQC,GAAD,IAAS;AACdJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEZ,QADE;AAER2B,MAAAA,OAAO,EAAEZ,GAAG,CAACE;AAFL,KAAD,CAAR;AAIA,GAPF,EAQEQ,KARF,CAQSC,GAAD,IAASI,OAAO,CAACC,GAAR,CAAYL,GAAZ,CARjB;AASA,CAXM;;AAaP,MAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAMjB,SAAS,GAAI,UAASiB,KAAM,EAAlC;AACAf,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,SAAlC;AACAT,EAAAA,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDN,SAAjD;AACD,CAJD","sourcesContent":["/* eslint-disable */\nimport {\n\tSET_USER,\n\tSET_ERRORS,\n\tCLEAR_ERRORS,\n\tLOADING_UI,\n\tSET_UNAUTHENTICATED,\n\tLOADING_USER,\n\tMARK_NOTIFICATIONS_READ\n} from '../types';\n\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n\tdispatch({ type: LOADING_UI });\n\taxios\n\t\t.post('/login', userData)\n\t\t.then((res) => {\n\t\t\tconst FBIdToken = `Bearer ${res.data}`;\n\t\t\tlocalStorage.setItem('FBIdToken', FBIdToken);\n\t\t\taxios.defaults.headers.common['Authorization'] = FBIdToken;\n\t\t\tdispatch(getUserData());\n\t\t\tdispatch({ type: CLEAR_ERRORS });\n\t\t\thistory.push('/');\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t});\n\t\t});\n};\n\nexport const getUserData = () => (dispatch) => {\n\tdispatch({ type: LOADING_USER });\n\taxios\n\t\t.get('/user')\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_USER,\n\t\t\t\tpayload: res.data\n\t\t\t});\n\t\t})\n\t\t.catch((err) => console.log(err));\n};\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};\n"]},"metadata":{},"sourceType":"module"}