{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/Inks/CommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../redux/actions/dataActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: '',\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.inkId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        body: ''\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authenticated\n    } = this.props;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"body\",\n          type: \"text\",\n          label: \"Comment on ink\",\n          error: errors.comment ? true : false,\n          helperText: errors.comment,\n          value: this.state.body,\n          onChange: this.handleChange,\n          fullWidth: true,\n          className: \"Textfield\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"visibleseparator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  inkId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(CommentForm);","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/Inks/CommentForm.js"],"names":["React","Component","PropTypes","Button","Grid","TextField","connect","submitComment","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","inkId","componentWillReceiveProps","nextProps","UI","loading","render","classes","authenticated","commentFormMarkup","textAlign","comment","button","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { submitComment } from '../redux/actions/dataActions';\n\nclass CommentForm extends Component {\n  state = {\n    body: '',\n    errors: {}\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({ body: '' });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.submitComment(this.props.inkId, { body: this.state.body });\n  };\n\n  render() {\n    const { classes, authenticated } = this.props;\n    const errors = this.state.errors;\n\n    const commentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Comment on ink\"\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className=\"Textfield\"\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Submit\n          </Button>\n        </form>\n        <hr className=\"visibleseparator\" />\n      </Grid>\n    ) : null;\n    return commentFormMarkup;\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  inkId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { submitComment }\n)(CommentForm);"]},"metadata":{},"sourceType":"module"}