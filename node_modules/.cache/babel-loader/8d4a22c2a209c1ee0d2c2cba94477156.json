{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/pages/user.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Ink from '../components/Ink';\nimport StaticProfile from '../components/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null,\n      screamIdParam: null\n    };\n  }\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screamId = this.props.match.params.screamId;\n    if (screamId) this.setState({\n      screamIdParam: screamId\n    });\n    this.props.getUserData(handle);\n    axios.get(`/user/${handle}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      screams,\n      loading\n    } = this.props.data;\n    const {\n      screamIdParam\n    } = this.state;\n    const screamsMarkup = loading ? /*#__PURE__*/_jsxDEV(ScreamSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this) : screams === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No screams from this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this) : !screamIdParam ? screams.map(scream => /*#__PURE__*/_jsxDEV(Scream, {\n      scream: scream\n    }, scream.screamId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }, this)) : screams.map(scream => {\n      if (scream.screamId !== screamIdParam) return /*#__PURE__*/_jsxDEV(Scream, {\n        scream: scream\n      }, scream.screamId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this);else return /*#__PURE__*/_jsxDEV(Scream, {\n        scream: scream,\n        openDialog: true\n      }, scream.screamId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 16,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12,\n        children: screamsMarkup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 4,\n        xs: 12,\n        children: this.state.profile === null ? /*#__PURE__*/_jsxDEV(ProfileSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(StaticProfile, {\n          profile: this.state.profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/pages/user.js"],"names":["React","Component","PropTypes","axios","Ink","StaticProfile","Grid","ProfileSkeleton","connect","getUserData","user","state","profile","screamIdParam","componentDidMount","handle","props","match","params","screamId","setState","get","then","res","data","catch","err","console","log","render","screams","loading","screamsMarkup","map","scream","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Ink from '../components/Ink';\nimport StaticProfile from '../components/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\n\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nclass user extends Component {\n  state = {\n    profile: null,\n    screamIdParam: null\n  };\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screamId = this.props.match.params.screamId;\n\n    if (screamId) this.setState({ screamIdParam: screamId });\n\n    this.props.getUserData(handle);\n    axios\n      .get(`/user/${handle}`)\n      .then((res) => {\n        this.setState({\n          profile: res.data.user\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n  render() {\n    const { screams, loading } = this.props.data;\n    const { screamIdParam } = this.state;\n\n    const screamsMarkup = loading ? (\n      <ScreamSkeleton />\n    ) : screams === null ? (\n      <p>No screams from this user</p>\n    ) : !screamIdParam ? (\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n    ) : (\n      screams.map((scream) => {\n        if (scream.screamId !== screamIdParam)\n          return <Scream key={scream.screamId} scream={scream} />;\n        else return <Scream key={scream.screamId} scream={scream} openDialog />;\n      })\n    );\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item sm={8} xs={12}>\n          {screamsMarkup}\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          {this.state.profile === null ? (\n            <ProfileSkeleton />\n          ) : (\n            <StaticProfile profile={this.state.profile} />\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { getUserData }\n)(user);"]},"metadata":{},"sourceType":"module"}