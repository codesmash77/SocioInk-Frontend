{"ast":null,"code":"import _classCallCheck from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Link}from'react-router-dom';import dayjs from'dayjs';import relativeTime from'dayjs/plugin/relativeTime';// MUI stuff\nimport Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import IconButton from'@material-ui/core/IconButton';import Tooltip from'@material-ui/core/Tooltip';import Typography from'@material-ui/core/Typography';import Badge from'@material-ui/core/Badge';// Icons\nimport NotificationsIcon from'@material-ui/icons/Notifications';import FavoriteIcon from'@material-ui/icons/Favorite';import ChatIcon from'@material-ui/icons/Chat';// Redux\nimport{connect}from'react-redux';import{markNotificationsRead}from'../redux/actions/userActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Notifications=/*#__PURE__*/function(_Component){_inherits(Notifications,_Component);var _super=_createSuper(Notifications);function Notifications(){var _this;_classCallCheck(this,Notifications);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={anchorEl:null};_this.handleOpen=function(event){_this.setState({anchorEl:event.target});};_this.handleClose=function(){_this.setState({anchorEl:null});};_this.onMenuOpened=function(){var unreadNotificationsIds=_this.props.notifications.filter(function(not){return!not.read;}).map(function(not){return not.notificationId;});_this.props.markNotificationsRead(unreadNotificationsIds);};return _this;}_createClass(Notifications,[{key:\"render\",value:function render(){var _this2=this;var notifications=this.props.notifications;var anchorEl=this.state.anchorEl;dayjs.extend(relativeTime);var notificationsIcon;if(notifications&&notifications.length>0){notifications.filter(function(not){return not.read===false;}).length>0?notificationsIcon=/*#__PURE__*/_jsx(Badge,{badgeContent:notifications.filter(function(not){return not.read===false;}).length,color:\"secondary\",children:/*#__PURE__*/_jsx(NotificationsIcon,{})}):notificationsIcon=/*#__PURE__*/_jsx(NotificationsIcon,{});}else{notificationsIcon=/*#__PURE__*/_jsx(NotificationsIcon,{});}var notificationsMarkup=notifications&&notifications.length>0?notifications.map(function(not){var verb=not.type==='like'?'liked':'commented on';var time=dayjs(not.createdAt).fromNow();var iconColor=not.read?'primary':'secondary';var icon=not.type==='like'?/*#__PURE__*/_jsx(FavoriteIcon,{color:iconColor,style:{marginRight:10}}):/*#__PURE__*/_jsx(ChatIcon,{color:iconColor,style:{marginRight:10}});return/*#__PURE__*/_jsxs(MenuItem,{onClick:_this2.handleClose,children:[icon,/*#__PURE__*/_jsxs(Typography,{component:Link,color:\"default\",variant:\"body1\",to:\"/users/\".concat(not.recipient,\"/scream/\").concat(not.screamId),children:[not.sender,\" \",verb,\" your scream \",time]})]},not.createdAt);}):/*#__PURE__*/_jsx(MenuItem,{onClick:this.handleClose,children:\"You have no notifications yet\"});return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{placement:\"top\",title:\"Notifications\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-owns\":anchorEl?'simple-menu':undefined,\"aria-haspopup\":\"true\",onClick:this.handleOpen,children:notificationsIcon})}),/*#__PURE__*/_jsx(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:this.handleClose,onEntered:this.onMenuOpened,children:notificationsMarkup})]});}}]);return Notifications;}(Component);var mapStateToProps=function mapStateToProps(state){return{notifications:state.user.notifications};};export default connect(mapStateToProps,{markNotificationsRead:markNotificationsRead})(Notifications);","map":{"version":3,"sources":["/mnt/c/Users/gokul/Desktop/React Lane/socialink-client/src/components/Notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsIds","props","notifications","filter","not","read","map","notificationId","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","screamId","sender","undefined","Boolean","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\n// MUI stuff\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n// Icons\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux\nimport { connect } from 'react-redux';\nimport { markNotificationsRead } from '../redux/actions/userActions';\n\nclass Notifications extends Component {\n  state = {\n    anchorEl: null\n  };\n  handleOpen = (event) => {\n    this.setState({ anchorEl: event.target });\n  };\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  onMenuOpened = () => {\n    let unreadNotificationsIds = this.props.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.notificationId);\n    this.props.markNotificationsRead(unreadNotificationsIds);\n  };\n  render() {\n    const notifications = this.props.notifications;\n    const anchorEl = this.state.anchorEl;\n\n    dayjs.extend(relativeTime);\n\n    let notificationsIcon;\n    if (notifications && notifications.length > 0) {\n      notifications.filter((not) => not.read === false).length > 0\n        ? (notificationsIcon = (\n            <Badge\n              badgeContent={\n                notifications.filter((not) => not.read === false).length\n              }\n              color=\"secondary\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          ))\n        : (notificationsIcon = <NotificationsIcon />);\n    } else {\n      notificationsIcon = <NotificationsIcon />;\n    }\n    let notificationsMarkup =\n      notifications && notifications.length > 0 ? (\n        notifications.map((not) => {\n          const verb = not.type === 'like' ? 'liked' : 'commented on';\n          const time = dayjs(not.createdAt).fromNow();\n          const iconColor = not.read ? 'primary' : 'secondary';\n          const icon =\n            not.type === 'like' ? (\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n            ) : (\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n            );\n\n          return (\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"default\"\n                variant=\"body1\"\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\n              >\n                {not.sender} {verb} your scream {time}\n              </Typography>\n            </MenuItem>\n          );\n        })\n      ) : (\n        <MenuItem onClick={this.handleClose}>\n          You have no notifications yet\n        </MenuItem>\n      );\n    return (\n      <Fragment>\n        <Tooltip placement=\"top\" title=\"Notifications\">\n          <IconButton\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleOpen}\n          >\n            {notificationsIcon}\n          </IconButton>\n        </Tooltip>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          onEntered={this.onMenuOpened}\n        >\n          {notificationsMarkup}\n        </Menu>\n      </Fragment>\n    );\n  }\n}\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.user.notifications\n});\n\nexport default connect(\n  mapStateToProps,\n  { markNotificationsRead }\n)(Notifications);"]},"metadata":{},"sourceType":"module"}